""" this document about Good reads application Vision document ✋️ """



⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️ PROJECT META DATA ⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️ 
✅️ PROJECT_NAME: "Good Reads"
✅️ DEADLINE:
✅️ PRICE: 
✅️ CLIENT_NAME_&_DESIGNATIONS:
✅️ COUNTRY_&_TIME_DEFERENCE: 
✅️ CLIENT_TECHNICAL_EXPERTISE:



⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️ REQUIREMENTS GATHERING ⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️
✅️ EXISTING_IMPORTANT_DOCUMENT:
"""
Build a web scraping application about quotes scraping based on user tag input from "https://www.goodreads.com/quotes/tag/love"

Application core feature:
	1. User input tag name
	2. Scraping data based on tag name
	3. Display Scrapy spider status
	4. Download quotes data as CSV file
"""

✅️ BUSINESS_GOAL:
"""
Goals of the project:
	1. Web application design document building and supported files
	2. Django cheat sheet
	3. Web scraping cheat sheet
	4. Building a architecture about Scrapy, Django, ScrapyD and JavaScript
"""

✅️ EXISTING_SOLUTIONS_KEY_POINTS:

✅️ APPLICATION_CORE_FEATURE:
	◼️ User friendly interface
	◼️ Tag as user input
	◼️ Scraping data from good reads website
	◼️ Display Scrapy spider status on web page
	◼️ Button to download data as CSV



⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️ REQUIREMENTS PROCESSING ⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️
✅️ USER_OF_THE_SYSTEM:
✅️ USE_CASE_DIAGRAM: True


✅️ APPLICATION_DESCRIPTION:
"""
"""

✅️ FUNCTIONAL_REQUIREMENTS:
	◼️ User should input tag name
	◼️ System should scraping data based on tag name
	◼️ Display spider status
	◼️ User should download scraping data as CSV file

✅️ NONFUNCTIONAL_REQUIREMENTS:
	◼️ System should scraping data with in 2 minute
	◼️ System should remember user session until download data
	◼️ System should have user friendly interface

✅️ PROJECT_DELIVERY_PROCESS_&_MATERIALS: 
"""
Project will run on local machine
"""



⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️ USER INTERFACE DESIGN ⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️
✅️ WEBSITE_STRUCTURE:
	◼️ home page
	◼️ result page

✅️ PAPER_WIRE_FRAME: True

✅️ TEXT_CONTENT:

✅️ HTML_CODE:



⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️ HIGH LEVEL DESIGN COMPONENT ⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️
✅️ HIGH_LEVEL_SEPARATION_OF_CONCERN:
	◼️ Writing data extraction
	◼️ Setup Django project with HTML code
	◼️ Integrating Scrapy with database and ScrapyD with Django

✅️ DATA_EXTRACTION_CODE:



⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️ DJANGO FRAME WORK COMPONENT ⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️
✅️ PROJECT_NAME: project_good_reads
✅️ APP_NAME: tags_app



